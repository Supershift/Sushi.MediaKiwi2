name: dotnet

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - ".github/workflows/pr_dotnet.yml"
      - "src/Sushi.MediaKiwi.AzureFunction/**/*"
      - "src/Sushi.MediaKiwi.DAL/**/*"
      - "src/Sushi.MediaKiwi.SampleAPI/**/*"
      - "src/Sushi.MediaKiwi.Services/**/*"
      - "src/Sushi.MediaKiwi.WebAPI/**/*"
      - "tests/**/*"

# Add "id-token" with the intended permissions.
permissions:
  contents: "read"
  id-token: "write"
  pull-requests: write
  actions: read
  security-events: write

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server
        env:
          SA_PASSWORD: Your_password123
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup MSSQL
      - name: Setup MSSQL
        uses: addnab/docker-run-action@v3
        with:
          image: ormico/sqlpackage
          options: -v ${{ github.workspace }}:/var/output
          run: |
            sleep 15;
            /opt/sqlpackage/sqlpackage /a:Import /TargetConnectionString:"Server=mssql,1433;TrustServerCertificate=True;Database=portal;User=sa;Password=Your_password123" /sf:/var/output/SqlScripts/mediakiwi.bacpac

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0"

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Build the solution
      - name: Build
        run: dotnet build --no-restore

      # Run Trivy vulnerability scanner
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.21.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'

      # Upload Trivy scan results to GitHub Security tab
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # Run tests
      - name: Test
        run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage
        env:
          ConnectionStrings__portal: "Server=localhost,1433;Database=portal;User Id=sa;Password=Your_password123;TrustServerCertificate=True;"
          
      - name: Merge Coverage Reports
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Generate Merged Coverage Report
        run: reportgenerator "-reports:coverage/**/coverage.cobertura.xml" "-targetdir:mergedcoveragereport" "-reporttypes:Html;Cobertura"

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "mergedcoveragereport/Cobertura.xml"
          badge: true
          format: "markdown"
          output: "both"

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
